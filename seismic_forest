#!/home/samhaug/anaconda2/bin/python

import numpy as np
import seispy
import obspy
from matplotlib import pyplot as plt
from sys import argv
from obspy.taup import TauPyModel
model = TauPyModel(model="iasp91")
from subprocess import call

'''
Just for fun. To help you see the forest through the trees.

argv[1] = pickled stream object
'''

def get_color(string):
    trunk_list = [
                  'wheat',
                  'burlywood',
                  'tan',
                  'rosybrown',
                  'sandybrown',
                  'goldenrod',
                  'peru',
                  'chocolate',
                  'saddlebrown',
                  'sienna',
                  'brown',
                  'maroon']
    branch_list = ['olivedrab',
                   'darkolivegreen',
                   'olive',
                   'seagreen',
                   'lightseagreen',
                   'mediumseagreen',
                   'darkseagreen',
                   'palegreen',
                   'lightgreen',
                   'mediumspringgreen',
                   'springgreen',
                   'yellowgreen',
                   'greenyellow',
                   'darkgreen',
                   'green',
                   'forestgreen',
                   'lime',
                   'limegreen',
                   'chartreuse',
                   'lawngreen']

    if string == 'branch':
        i = np.random.randint(0,len(branch_list))
        color = branch_list[i]
        return color
    if string == 'trunk':
        i = np.random.randint(0,len(trunk_list))
        color = trunk_list[i]
        return color



st = obspy.read('/home/samhaug/work1/SP_brazil_data/2007_full.pk')
#st.differentiate()
st.normalize()
st = seispy.convert.set_gcarc(st)

st.interpolate(1)

fig,ax = plt.subplots(figsize=(6,9))
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
ax.spines['left'].set_visible(False)
ax.yaxis.set_ticklabels([])
ax.yaxis.set_ticks([])
ax.xaxis.set_ticklabels([])
ax.xaxis.set_ticks([])
ax.set_ylim(200,1600)


for tr in st:
    arrival = model.get_travel_times(source_depth_in_km=tr.stats.sac['evdp'],
                                    distance_in_degree=tr.stats.sac['gcarc'],
                                    phase_list = ['P','Pdiff'])

    t = arrival[0].time
    o = tr.stats.sac['o']
    trunk = seispy.data.phase_window(tr,['P'],window=(-1*t,-20))
    top = np.random.randint(-10,200)
    branch = seispy.data.phase_window(tr,['P'],window=(-10,1400+top))
    t_trunk = np.linspace(0,t,num=len(trunk.data))
    t_branch = np.linspace(t,1400+top,num=len(branch.data))
    ax.plot(trunk.data+tr.stats.sac['gcarc'],t_trunk,
            color=get_color('trunk'),alpha=0.5,lw=0.8)
    ax.plot(branch.data+tr.stats.sac['gcarc'],t_branch,
            color=get_color('branch'),alpha=0.5,lw=0.8)


plt.savefig('./seismic_forest.pdf')
call('evince ./seismic_forest.pdf',shell=True)
